
Eshika Dissanayake@LAPTOP-STVQH3IV MINGW64 ~/Documents/Git Course/Day 2 (master)
$ git init
Reinitialized existing Git repository in C:/Users/Eshika Dissanayake/Documents/Git Course/Day 2/.git/

Eshika Dissanayake@LAPTOP-STVQH3IV MINGW64 ~/Documents/Git Course/Day 2 (master)
$ git help
usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--no-lazy-fetch]
           [--no-optional-locks] [--no-advice] [--bare] [--git-dir=<path>]
           [--work-tree=<path>] [--namespace=<name>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   restore    Restore working tree files
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   diff       Show changes between commits, commit and working tree, etc
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   backfill   Download missing objects in a partial clone
   branch     List, create, or delete branches
   commit     Record changes to the repository
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   reset      Reset current HEAD to the specified state
   switch     Switch branches
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

Eshika Dissanayake@LAPTOP-STVQH3IV MINGW64 ~/Documents/Git Course/Day 2 (master)
$ git diff

Eshika Dissanayake@LAPTOP-STVQH3IV MINGW64 ~/Documents/Git Course/Day 2 (master)
$ git diff --staged

Eshika Dissanayake@LAPTOP-STVQH3IV MINGW64 ~/Documents/Git Course/Day 2 (master)
$ git diff head

Eshika Dissanayake@LAPTOP-STVQH3IV MINGW64 ~/Documents/Git Course/Day 2 (master)
$ git log
commit 3ac258112b137942ca80230016131c2f2497076e (HEAD -> master)
Author: Eshika Dissanayake <151606601+Eshika2@users.noreply.github.com>
Date:   Thu Feb 27 18:36:14 2025 +0530

    commit

commit 332106d9fc9174e20fa65be4f2f76566ede80971
Author: Eshika Dissanayake <151606601+Eshika2@users.noreply.github.com>
Date:   Thu Feb 27 18:29:52 2025 +0530

    Commit

Eshika Dissanayake@LAPTOP-STVQH3IV MINGW64 ~/Documents/Git Course/Day 2 (master)
$ git cat-file 3ac258112b137942ca80230016131c2f2497076e -p
tree 8c078b07b4f6898a14a6b0d5168bfbbf7f603b02
parent 332106d9fc9174e20fa65be4f2f76566ede80971
author Eshika Dissanayake <151606601+Eshika2@users.noreply.github.com> 1740661574 +0530
committer Eshika Dissanayake <151606601+Eshika2@users.noreply.github.com> 1740661574 +0530

commit

Eshika Dissanayake@LAPTOP-STVQH3IV MINGW64 ~/Documents/Git Course/Day 2 (master)
$ git cat-file 8c078b07b4f6898a14a6b0d5168bfbbf7f603b02 -p
100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391    example.txt
100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391    text.txt

Eshika Dissanayake@LAPTOP-STVQH3IV MINGW64 ~/Documents/Git Course/Day 2 (master)
$ git cat-file e69de29bb2d1d6434b8b29ae775ad8c2e48c5391 -p

Eshika Dissanayake@LAPTOP-STVQH3IV MINGW64 ~/Documents/Git Course/Day 2 (master)
$ mv example.txt newFile.txt

Eshika Dissanayake@LAPTOP-STVQH3IV MINGW64 ~/Documents/Git Course/Day 2 (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    example.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        Git Code.txt
        newFile.txt

no changes added to commit (use "git add" and/or "git commit -a")

Eshika Dissanayake@LAPTOP-STVQH3IV MINGW64 ~/Documents/Git Course/Day 2 (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   newFile.txt

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    example.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        Git Code.txt

Eshika Dissanayake@LAPTOP-STVQH3IV MINGW64 ~/Documents/Git Course/Day 2 (master)
$ mv newFile.txt index.html

Eshika Dissanayake@LAPTOP-STVQH3IV MINGW64 ~/Documents/Git Course/Day 2 (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   newFile.txt

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    example.txt
        deleted:    newFile.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        Git Code.txt
        index.html


Eshika Dissanayake@LAPTOP-STVQH3IV MINGW64 ~/Documents/Git Course/Day 2 (master)
$ git add index.html

Eshika Dissanayake@LAPTOP-STVQH3IV MINGW64 ~/Documents/Git Course/Day 2 (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   index.html
        new file:   newFile.txt

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    example.txt
        deleted:    newFile.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        Git Code.txt



Eshika Dissanayake@LAPTOP-STVQH3IV MINGW64 ~/Documents/Git Course/Day 2 (master)
$ git restore --staged index.html

Eshika Dissanayake@LAPTOP-STVQH3IV MINGW64 ~/Documents/Git Course/Day 2 (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   newFile.txt

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    example.txt
        deleted:    newFile.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        Git Code.txt
        index.html


